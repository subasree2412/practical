Iterative structure:



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApp6
{
    public partial class Form1 : Form
    {

        string[] StudentNames = new string[100];
        int[,] StudentMarks = new int[100, 3];
        int studentcount = 0;
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {

            if (studentcount <= 100)
            {
                MessageBox.Show("student list full");
            }
            StudentNames[studentcount] = textBox1.Text;
            StudentMarks[studentcount, 0] = Convert.ToInt32(textBox2.Text);
            StudentMarks[studentcount, 1] = Convert.ToInt32(textBox3.Text);
            StudentMarks[studentcount, 2] = Convert.ToInt32(textBox4.Text);
            studentcount++;
            MessageBox.Show("student added successfully");
            ClearInputs();
        }

        private void button2_Click(object sender, EventArgs e)
        {
            listBox1.Items.Clear();
            for (int i = 0; i < studentcount; i++)
            {
                listBox1.Items.Add(StudentNames[i] + "marks:" + StudentMarks[i,0] + "," + StudentMarks[i, 1] + "," + StudentMarks[i, 2]);

            }

        }

        private void button3_Click(object sender, EventArgs e)
        {
            string searchname = textBox5.Text;
            bool found = false;

            for (int i = 0; i < studentcount; i++)
            {
                if (StudentNames[i].Equals(searchname,
                StringComparison.OrdinalIgnoreCase))
                {

                    MessageBox.Show($" student found:{ StudentNames[i]}marks:{StudentMarks[i, 0]},{ StudentMarks[i, 1]},{ StudentMarks[i, 2]}"); 
                    found = true;
                break;
                }
            }
            if (!found)
            {
                MessageBox.Show("student not found.");
            }
        }

        private void button4_Click(object sender, EventArgs e)
        {
            if (studentcount == 0)

            {
                MessageBox.Show(" No students available ");
                return;
            }

            double totalmarks = 0;
            int totalsubjets = studentcount * 3;
            for (int i = 0; i < studentcount; i++)
            {
                for (int j = 0; j < 3; j++)
                {
                    totalmarks += StudentMarks[i, j];
                }
            }
            double average = totalmarks / totalsubjets;
            MessageBox.Show($"class Average Marks: {average:F2}");
        }

        private void button5_Click(object sender, EventArgs e)
        {
            Environment.Exit(0);
        }
        private void ClearInputs()
        {
            textBox1.Clear();
            textBox2.Clear();
            textBox3.Clear();
            textBox4.Clear();
        }
    }
    }
